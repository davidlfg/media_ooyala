<?php

// Hooks and callbacks for integrating with File Entity module for display.
include_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'media_ooyala') . '/includes/media_ooyala.formatters.inc';


/**
 * Implements hook_media_internet_providers().
 */
function media_ooyala_media_internet_providers() {
  $info['MediaInternetOoyalaHandler'] = array(
    'title' => t('Ooyala'),
  );

  return $info;
}

/**
 * Implements hook_stream_wrappers().
 */
function media_ooyala_stream_wrappers() {
  return array(
    'ooyala' => array(
      'name' => t('Ooyala videos'),
      'class' => 'MediaOoyalaStreamWrapper',
      'description' => t('Videos provided by Ooyala.'),
      'type' => STREAM_WRAPPERS_READ_VISIBLE,
    ),
  );
}

/**
 * Implements hook_theme().
 */
function media_ooyala_theme($existing, $type, $theme, $path) {
  return array(
    'media_ooyala_video' => array(
      'variables' => array('uri' => NULL, 'options' => array()),
      'file' => 'media_ooyala.theme.inc',
      'path' => $path . '/themes',
      //'template' => 'media-ooyala-video',
    ),
    'media_ooyala_html' => array(
      'variables' => array('markup' => NULL),
      'path' => $path . '/themes',
      'template' => 'media-ooyala-video',
    ),
  );
}

/**
 * Theme function to output an Ooyala video player.
 */
function theme_media_ooyala_video($variables) {
  $player_version = variable_get('ooyala_player_version', 'v3');
  drupal_add_js(drupal_get_path('module', 'ooyala') . '/ooyala_player.js');
  $embed_code = $variables['embed_code'];
  $container_id = $variables['container_id'];
  $params = $variables['params'];

  if ($player_version === 'v3') {
    drupal_add_js('http://player.ooyala.com/v3/' . $params['ooyalaPlayerId'], 'external');

    // Encode the list of parameters, and remove quotes from onCreate callbacks.
    $params = json_encode($params);
    $params = preg_replace('/"onCreate":"([0-9a-z._]+)"/i', '"onCreate":$1', $params);
    $output = '<div id="' . $container_id . '"></div><script type="text/javascript">var videoPlayer = OO.Player.create("' . $container_id . '",' . '"' . $embed_code . '", ' . $params . ');</script>';
  }
  else {
    $output = '<div id="' . $container_id . '"></div><script type="text/javascript" src="http://player.ooyala.com/player.js?' . htmlspecialchars(http_build_query($params)) . '"></script>';
  }

  return theme('media_ooyala_html', array('markup' => $output));

}

/**
 * Implements hook_media_parse().
 *
 * @todo This hook should be deprecated. Refactor Media module to not call it
 *   any more, since media_internet should be able to automatically route to the
 *   appropriate handler.
 */
function media_ooyala_media_parse($embed_code) {
  $handler = new MediaInternetOoyalaHandler($embed_code);
  return $handler->parse($embed_code);
}

/**
 * Implements hook_media_format_form_prepare_alter().
 */
function media_ooyala_media_format_form_prepare_alter(&$form, &$form_state, $media) {
  if ($form['#media']->filemime == 'video/ooyala') {
    $settings = array('autosubmit' => TRUE);
    drupal_add_js(array('media_format_form' => $settings), 'setting');
  }
}

/**
 * Implements hook_file_mimetype_mapping_alter().
 *
 * Regster the video/ooyala mimetype.
 */
function media_ooyala_file_mimetype_mapping_alter(&$mapping) {
  $mapping['mimetypes'][] = 'video/ooyala';
}

/**
 * Ooyala search tab for the Media browser.
 */

/**
 * Implements hook_media_browser_plugin_info().
 *
 * Commented out for release versions, active in dev versions. To enable the
 * YouTube media browser tab, uncomment this function.
 */
function media_ooyala_media_browser_plugin_info() {
  $info['ooyala'] = array(
    'title' => t('Ooyala'),
    'class' => 'MediaOoyalaBrowser',
  );

  return $info;
}

/**
 * Provides a form for adding media items from Ooyala search.
 */
function media_ooyala_add($form = array(), &$form_state = array()) {
  module_load_include('inc', 'media', 'includes/media.browser');
  return $form;
}